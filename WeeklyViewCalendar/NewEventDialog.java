package weeklyviewcalendar;

import javax.swing.*;

import scheduleproject.Events;
import scheduleproject.Schedule;

import java.awt.event.*;

@SuppressWarnings("serial")
public class NewEventDialog extends JDialog{
	
	// main container
    private JPanel dialogPanel;
    // name of event label and fields
    private JLabel nameEventLabel;
    private JTextField nameEventField;
	// start and end time labels and fields
    private JLabel startTimeLabel;
    private JComboBox<String> startTimeField;
    private JLabel endTimeLabel;
    private JComboBox<String> endTimeField;
    // day of week label and inputs
    private JLabel dayWeekLabel;
    private JRadioButton monRadioButton;
    private JRadioButton tueRadioButton;
    private JRadioButton wedRadioButton;
    private JRadioButton thuRadioButton;
    private JRadioButton friRadioButton;
    
    private Schedule mySchedule;
    // create event button
    private JButton createEventButton;
    
    // constructor
    NewEventDialog(Schedule s){
    	mySchedule = s;
        dialogPanel = new JPanel();
        nameEventField = new JTextField();
        nameEventLabel = new JLabel();
        
        monRadioButton = new JRadioButton();
        tueRadioButton = new JRadioButton();
        wedRadioButton = new JRadioButton();
        thuRadioButton = new JRadioButton();
        friRadioButton = new JRadioButton();
        
        dayWeekLabel = new JLabel();
        startTimeLabel = new JLabel();
        endTimeLabel = new JLabel();
        
        startTimeField = new JComboBox<String>(WeeklyCalFrame.TIMES);
        endTimeField = new JComboBox<String>(WeeklyCalFrame.TIMES);
        createEventButton = new JButton();
        
        this.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        this.setTitle("Create a New Event");
        this.setAlwaysOnTop(true);

        nameEventField.setText("Enter Name of Event");
        nameEventLabel.setText("Name of Event");

        monRadioButton.setText("Monday");
        tueRadioButton.setText("Tuesday");
        wedRadioButton.setText("Wednesday");
        thuRadioButton.setText("Thursday");
        friRadioButton.setText("Friday");

        dayWeekLabel.setText("Days of the Week the Event Occurs");
        dayWeekLabel.setToolTipText("");

        startTimeLabel.setText("Start Time");
        endTimeLabel.setText("End Time");
        
        // create the submit button and add an ActionListener (see below)
        createEventButton.setText("Create Event");
        createEventButton.addActionListener(new ActionListener(){
        	public void actionPerformed(ActionEvent evt){
        		createEventButtonActionPerformed(evt);
        	}
        });

        
        // this code was auto generated by the netbeans gui creator
        GroupLayout jPanel1Layout = new GroupLayout(dialogPanel);
        dialogPanel.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(nameEventLabel, GroupLayout.PREFERRED_SIZE, 107, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameEventField, GroupLayout.PREFERRED_SIZE, 164, GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(monRadioButton)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tueRadioButton)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(wedRadioButton))
                    .addComponent(dayWeekLabel)
                    .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                        .addComponent(endTimeField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addComponent(thuRadioButton)
                                .addComponent(startTimeLabel, GroupLayout.PREFERRED_SIZE, 81, GroupLayout.PREFERRED_SIZE)
                                .addComponent(endTimeLabel, GroupLayout.PREFERRED_SIZE, 81, GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(26, 26, 26)
                                    .addComponent(startTimeField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(friRadioButton)))))
                    .addComponent(createEventButton))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(nameEventLabel)
                    .addComponent(nameEventField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(dayWeekLabel, GroupLayout.PREFERRED_SIZE, 22, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(monRadioButton)
                    .addComponent(tueRadioButton)
                    .addComponent(wedRadioButton))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(friRadioButton)
                    .addComponent(thuRadioButton))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(startTimeLabel)
                    .addComponent(startTimeField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(endTimeField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(endTimeLabel))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(createEventButton)
                .addGap(22, 22, 22))
        );

        GroupLayout jDialog1Layout = new GroupLayout(this.getContentPane());
        this.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(dialogPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(dialogPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        // end auto generated code
    }
    
    private void createEventButtonActionPerformed(ActionEvent evt){    	
    	// prints current values of the buttons
    	System.out.println("Current Values:");
    	System.out.println(getCurrentValues());
    	
    	// TODO error checking for times
    	
    	// create and print an event
    	Events newEvent = new Events(getName(), getActiveDays(), getStartHour(), getStartMinutes(), getEndHour(), getEndMinutes());
    	System.out.println("New event: ");
    	System.out.println(newEvent);
    	
    	mySchedule.addEvent(newEvent);
    	System.out.println(mySchedule);
    	
    	// close dialog box on click of CreateEvent Button
    	this.setVisible(false);
    }
    
    /**
     * 
     * @return a string version of all of the current input field values
     */
    public String getCurrentValues(){
    	StringBuilder s = new StringBuilder();
    	s.append(nameEventLabel.getText()).append(": ").append(getName()).append("\n");
    	s.append(startTimeLabel.getText()).append(": ").append(startTimeField.getSelectedItem()).append("\n");
    	s.append(endTimeLabel.getText()).append(": ").append(endTimeField.getSelectedItem()).append("\n");
   
    	s.append(monRadioButton.getText()).append(": ").append(monRadioButton.isSelected()).append("\n");
    	s.append(tueRadioButton.getText()).append(": ").append(tueRadioButton.isSelected()).append("\n");
    	s.append(wedRadioButton.getText()).append(": ").append(wedRadioButton.isSelected()).append("\n");
    	s.append(thuRadioButton.getText()).append(": ").append(thuRadioButton.isSelected()).append("\n");
    	s.append(friRadioButton.getText()).append(": ").append(friRadioButton.isSelected()).append("\n");
    	
    	return s.toString();
    }
    
    public String getName(){
    	return nameEventField.getText();
    }
    
    public String getActiveDays(){
    	StringBuilder s = new StringBuilder("");
    	
    	// check for the days that have been marked
    	if(monRadioButton.isSelected()){
    		s.append("M");
    	}
    	if(tueRadioButton.isSelected()){
    		s.append("T");
    	}
    	if(wedRadioButton.isSelected()){
    		s.append("W");
    	}
    	if(thuRadioButton.isSelected()){
    		s.append("TH");
    	}
    	if(friRadioButton.isSelected()){
    		s.append("F");
    	}
    	
    	return s.toString();
    }
    
    public int getStartHour(){
    	int index = startTimeField.getSelectedIndex();
    	return (index/2) + 6;
    }
    
    public int getStartMinutes(){
    	int index = startTimeField.getSelectedIndex();
    	return (index%2)*30;
    }
    
    public int getEndHour(){
    	int index = endTimeField.getSelectedIndex();
    	return (index/2) + 6;
    }
    
    public int getEndMinutes(){
    	int index = endTimeField.getSelectedIndex();
    	return (index%2)*30;
    }
}